import{_ as s,o as n,c as a,d as e}from"./app.92214221.js";const A=JSON.parse('{"title":"项目部署","description":"","frontmatter":{},"headers":[{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[]}],"relativePath":"note/program/deploy.md","lastUpdated":1689242607000}'),l={name:"note/program/deploy.md"},p=e(`<h1 id="项目部署" tabindex="-1">项目部署 <a class="header-anchor" href="#项目部署" aria-hidden="true">#</a></h1><h2 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h2><p>Docker 就是打包提供软件运行环境的工具，可以将例如 jvm,V8 引擎(node),mysql8.0 等等和软件一起打包，然后在任意容器中可以开箱即用，不需要再额外安装依赖环境。 Docker 的三大概念：</p><ol><li>镜像文件：Dockerfile</li><li>镜像：Image</li><li>容器：Container</li></ol><h4 id="dockerfile" tabindex="-1">Dockerfile: <a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a></h4><p>将操作系统,各种依赖与版本号写入 Dockerfile,记录了程序运行时所需要的环境依赖,以及将项目复制进镜像等等操作</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"># 基于某个基础镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">FROM base_image</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 安装所需的依赖项</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN apt</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">get update </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> apt</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">get install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">y dependency</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 设置工作目录</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 复制代码到镜像中</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 安装项目依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN npm install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 暴露端口</span></span>
<span class="line"><span style="color:#A6ACCD;">EXPOSE </span><span style="color:#F78C6C;">8000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 定义启动命令</span></span>
<span class="line"><span style="color:#A6ACCD;">CMD [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="image" tabindex="-1">Image： <a class="header-anchor" href="#image" aria-hidden="true">#</a></h4><p>通过 Dockerfile 执行<code>docker build</code>指令来创建一个镜像，镜像是静态的，需要被解析才会生成真正的运行环境。</p><h4 id="container" tabindex="-1">Container: <a class="header-anchor" href="#container" aria-hidden="true">#</a></h4><p>指定 image 执行 docker run 命令，docker 就为我们分配一个容器，将镜像转化为真正的运行环境，软件可在容器里面正常运行。</p>`,11),r=[p];function o(c,i,t,d,D,C){return n(),a("div",null,r)}const m=s(l,[["render",o]]);export{A as __pageData,m as default};
