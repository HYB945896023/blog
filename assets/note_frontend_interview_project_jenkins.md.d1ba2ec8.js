import{_ as s,o as n,c as e,d as a}from"./app.92214221.js";const C=JSON.parse('{"title":"GPT流程","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 安装 Jenkins","slug":"_1-安装-jenkins","link":"#_1-安装-jenkins","children":[{"level":3,"title":"步骤1：安装 Java","slug":"步骤1-安装-java","link":"#步骤1-安装-java","children":[]},{"level":3,"title":"步骤2：添加 Jenkins 源","slug":"步骤2-添加-jenkins-源","link":"#步骤2-添加-jenkins-源","children":[]},{"level":3,"title":"步骤3：安装 Jenkins","slug":"步骤3-安装-jenkins","link":"#步骤3-安装-jenkins","children":[]},{"level":3,"title":"步骤4：启动和测试 Jenkins","slug":"步骤4-启动和测试-jenkins","link":"#步骤4-启动和测试-jenkins","children":[]}]},{"level":2,"title":"大坑--修改jenkins默认端口：","slug":"大坑-修改jenkins默认端口","link":"#大坑-修改jenkins默认端口","children":[]},{"level":2,"title":"2. 安装 Node.js 和 Vue CLI","slug":"_2-安装-node-js-和-vue-cli","link":"#_2-安装-node-js-和-vue-cli","children":[{"level":3,"title":"步骤1：添加 Node.js 源","slug":"步骤1-添加-node-js-源","link":"#步骤1-添加-node-js-源","children":[]},{"level":3,"title":"步骤2：安装 Node.js","slug":"步骤2-安装-node-js","link":"#步骤2-安装-node-js","children":[]},{"level":3,"title":"步骤3：安装 Vue CLI","slug":"步骤3-安装-vue-cli","link":"#步骤3-安装-vue-cli","children":[]}]},{"level":2,"title":"3. 在 Jenkins 中配置项目","slug":"_3-在-jenkins-中配置项目","link":"#_3-在-jenkins-中配置项目","children":[{"level":3,"title":"步骤1：安装插件","slug":"步骤1-安装插件","link":"#步骤1-安装插件","children":[]},{"level":3,"title":"步骤2：创建 Jenkins 项目","slug":"步骤2-创建-jenkins-项目","link":"#步骤2-创建-jenkins-项目","children":[]}]},{"level":2,"title":"4. 构建项目","slug":"_4-构建项目","link":"#_4-构建项目","children":[]},{"level":2,"title":"步骤一：安装 Jenkins","slug":"步骤一-安装-jenkins","link":"#步骤一-安装-jenkins","children":[]},{"level":2,"title":"步骤二：设置 Gitee 凭据","slug":"步骤二-设置-gitee-凭据","link":"#步骤二-设置-gitee-凭据","children":[]},{"level":2,"title":"步骤三：创建 Jenkins 任务","slug":"步骤三-创建-jenkins-任务","link":"#步骤三-创建-jenkins-任务","children":[]}],"relativePath":"note/frontend/interview/project/jenkins.md","lastUpdated":1699523741000}'),l={name:"note/frontend/interview/project/jenkins.md"},i=a(`<h2 id="_1-安装-jenkins" tabindex="-1">1. 安装 Jenkins <a class="header-anchor" href="#_1-安装-jenkins" aria-hidden="true">#</a></h2><p>jenkins指令：</p><h3 id="步骤1-安装-java" tabindex="-1">步骤1：安装 Java <a class="header-anchor" href="#步骤1-安装-java" aria-hidden="true">#</a></h3><p>首先需要安装 Java，因为 Jenkins 是基于 Java 开发的。在 Ubuntu 上，可以使用以下命令来安装 Java：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo apt install openjdk-8-jdk -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="步骤2-添加-jenkins-源" tabindex="-1">步骤2：添加 Jenkins 源 <a class="header-anchor" href="#步骤2-添加-jenkins-源" aria-hidden="true">#</a></h3><p>接下来需要添加 Jenkins 的官方源到 Ubuntu 的源列表中。</p><p>打开终端，运行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上述命令将下载一个密钥并将其添加到 apt-key 中。接下来需要将 Jenkins Debian 仓库添加到 Ubuntu：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo sh -c &#39;echo deb https://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="步骤3-安装-jenkins" tabindex="-1">步骤3：安装 Jenkins <a class="header-anchor" href="#步骤3-安装-jenkins" aria-hidden="true">#</a></h3><p>添加了源之后，运行以下命令来安装 Jenkins：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo apt install jenkins -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="步骤4-启动和测试-jenkins" tabindex="-1">步骤4：启动和测试 Jenkins <a class="header-anchor" href="#步骤4-启动和测试-jenkins" aria-hidden="true">#</a></h3><p>安装完成后，Jenkins 将自动启动。可以使用以下命令来检查 Jenkins 是否正在运行：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl status jenkins</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="大坑-修改jenkins默认端口" tabindex="-1">大坑--修改jenkins默认端口： <a class="header-anchor" href="#大坑-修改jenkins默认端口" aria-hidden="true">#</a></h2><p>Jenkins2.332.1之后。。不再使用/etc/default/jenkins。Jenkins配置了systemd。你可以选择systemctl cat jenkins查看选项，选择systemctl edit jenkins修改选项。。</p><p>你可以改变端口。</p><p>[Service] Environment=&quot;JENKINS_PORT=8081&quot;</p><p>更新的java内存和java参数Environment=&quot;JENKINS_OPTS=”</p><p>Environment=&quot;JENKINS_OPTS=-Xmx2048m&quot;</p><h2 id="_2-安装-node-js-和-vue-cli" tabindex="-1">2. 安装 Node.js 和 Vue CLI <a class="header-anchor" href="#_2-安装-node-js-和-vue-cli" aria-hidden="true">#</a></h2><p>Ubuntu 中默认提供的 Node.js 版本可能过低，不能满足 Vue 项目的要求。因此我们需要安装最新版本的 Node.js，以及 Vue CLI（Vue 项目脚手架）。</p><h3 id="步骤1-添加-node-js-源" tabindex="-1">步骤1：添加 Node.js 源 <a class="header-anchor" href="#步骤1-添加-node-js-源" aria-hidden="true">#</a></h3><p>首先需要添加 Node.js 官方源到 Ubuntu 中。</p><p>打开终端，运行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：上述命令中的 <code>10.x</code> 是当前最新的 Node.js 版本。如果您需要安装其他版本，请替换成对应的版本号。</p><h3 id="步骤2-安装-node-js" tabindex="-1">步骤2：安装 Node.js <a class="header-anchor" href="#步骤2-安装-node-js" aria-hidden="true">#</a></h3><p>添加了源之后，运行以下命令来安装 Node.js：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo apt install nodejs -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="步骤3-安装-vue-cli" tabindex="-1">步骤3：安装 Vue CLI <a class="header-anchor" href="#步骤3-安装-vue-cli" aria-hidden="true">#</a></h3><p>最后，使用 npm 工具来安装 Vue CLI。</p><p>打开终端，运行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo npm install -g @vue/cli</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_3-在-jenkins-中配置项目" tabindex="-1">3. 在 Jenkins 中配置项目 <a class="header-anchor" href="#_3-在-jenkins-中配置项目" aria-hidden="true">#</a></h2><h3 id="步骤1-安装插件" tabindex="-1">步骤1：安装插件 <a class="header-anchor" href="#步骤1-安装插件" aria-hidden="true">#</a></h3><p>在 Jenkins 中安装插件以支持构建 Vue 项目。</p><p>打开 Jenkins Web 页面，选择左侧面板的 &quot;Manage Jenkins&quot;，然后选择 &quot;Manage Plugins&quot;，在 &quot;Available&quot; 选项卡下搜索 &quot;NodeJs&quot;，勾选选框并点击 &quot;Install without restart&quot; 安装。</p><p>同样，安装 &quot;NodeJS Plugin&quot; 插件。</p><h3 id="步骤2-创建-jenkins-项目" tabindex="-1">步骤2：创建 Jenkins 项目 <a class="header-anchor" href="#步骤2-创建-jenkins-项目" aria-hidden="true">#</a></h3><p>在 Jenkins Web 页面，点击 &quot;New Item&quot; 创建一个新项目。</p><p>在 &quot;Job Name&quot; 中输入项目名称，选择 &quot;Freestyle project&quot;，然后点击 &quot;OK&quot;。</p><p>在 &quot;General&quot; 页面中，输入项目描述，并选择源代码管理工具 (比如: Git)。</p><p>在 &quot;Build Environment&quot; 中，勾选 &quot;Provide Node &amp; npm bin/ folder to PATH&quot;，并在 NodeJS 配置中添加 Node 和 npm 的安装路径。</p><p>在 &quot;Build&quot; 页面中，添加构建步骤。输入以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>保存配置，即可完成项目的配置。</p><h2 id="_4-构建项目" tabindex="-1">4. 构建项目 <a class="header-anchor" href="#_4-构建项目" aria-hidden="true">#</a></h2><p>在 Jenkins Web 页面，找到项目并点击 &quot;Build Now&quot;。</p><p>Jenkins 会自动下载源代码并使用 Node 进行构建。</p><p>构建完成后，可以在 &quot;Workspace&quot; 中找到构建生成的 Vue 应用。在服务器上运行命令 <code>npm run dev</code>，即可查看应用。</p><p>至此，Jenkins 集成 Vue 项目的流程就完成了。</p><h1 id="gpt流程" tabindex="-1">GPT流程 <a class="header-anchor" href="#gpt流程" aria-hidden="true">#</a></h1><p>好的，下面是在Ubuntu系统上使用Jenkins和Gitee实现CI/CD的详细步骤：</p><h2 id="步骤一-安装-jenkins" tabindex="-1">步骤一：安装 Jenkins <a class="header-anchor" href="#步骤一-安装-jenkins" aria-hidden="true">#</a></h2><ol><li><p>在 Ubuntu 系统中安装 Jenkins：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-q</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-O</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://pkg.jenkins.io/debian-stable/jenkins.io.key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt-key</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">echo deb https://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>启动 Jenkins：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>确认 Jenkins 是否已经成功启动：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果状态为 &quot;active (running)&quot;，说明 Jenkins 已经成功启动。</p></li><li><p>在浏览器中访问 Jenkins 控制台：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">http://&lt;your-server-IP&gt;:8080/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果一切顺利，你应该可以看到 Jenkins 的欢迎页面。在第一次访问 Jenkins 控制台时，需要输入初始密码。初始密码可以在服务器上找到：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/lib/jenkins/secrets/initialAdminPassword</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>复制初始密码，粘贴到 Jenkins 控制台中，点击“Continue”。</p></li><li><p>安装插件： 在 Jenkins 控制台中，选择“Install suggested plugins”安装 Jenkins 推荐的插件。</p></li></ol><h2 id="步骤二-设置-gitee-凭据" tabindex="-1">步骤二：设置 Gitee 凭据 <a class="header-anchor" href="#步骤二-设置-gitee-凭据" aria-hidden="true">#</a></h2><ol><li><p>在 Jenkins 控制台中，选择“Credentials”→“System”→“Global credentials (unrestricted)”→“Add Credentials”。</p></li><li><p>选择“Username with password”，填写 Gitee 的账号和密码。</p></li><li><p>点击“OK”保存凭据。</p></li></ol><h2 id="步骤三-创建-jenkins-任务" tabindex="-1">步骤三：创建 Jenkins 任务 <a class="header-anchor" href="#步骤三-创建-jenkins-任务" aria-hidden="true">#</a></h2><ol><li><p>在 Jenkins 控制台中，选择“New Item”创建一个新的 Jenkins 任务。</p></li><li><p>填写任务的名称，选择“Freestyle project”，点击“OK”。</p></li><li><p>在任务配置页面中，选择“Git”选项卡，填写你的 Git 仓库地址和凭据，点击“Save Credentials”保存凭据。</p></li><li><p>在“Build Triggers”选项卡中，勾选“Build when a change is pushed to GitLab”选项。</p></li><li><p>在“Build”选项卡中，点击“Add build step”→“Execute shell”，填写以下命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 拉取代码</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://gitee.com/username/repository.git</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">repository</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 打包</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>其中，<code>username</code>是你的 Gitee 用户名，<code>repository</code>是你的项目名称。</p></li><li><p>点击“Save”保存任务配置。</p></li></ol><p>现在，当你在 Gitee 上推送代码时，Jenkins 将自动拉取代码，安装依赖并打包。你可以在任务控制台中查看构建的日志，以及构建是否成功。如果构建成功，你的项目应该已经部</p><p>要修改 Jenkins 的端口，需要在 Jenkins 的配置文件中进行修改。具体步骤如下：</p><ol><li>进入 Jenkins 的配置文件所在目录，可以使用以下命令定位目录：</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd /etc/default/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>打开 Jenkins 的配置文件，一般文件名为 <code>jenkins</code>，可以使用编辑器打开：</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo nano jenkins</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>在打开的文件中找到 <code>HTTP_PORT</code> 这一行，将端口号改为想要的端口号，例如改为 <code>8081</code>：</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">HTTP_PORT=8081</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li><p>保存文件并退出编辑器。</p></li><li><p>重新启动 Jenkins 服务：</p></li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl restart jenkins</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：如果将 Jenkins 的端口改为已被其他服务占用的端口，可能会导致端口冲突，无法启动 Jenkins。因此需要确保 Jenkins 使用的端口不会和其他服务冲突。</p><p>强制停止 sudo systemctl stop jenkins.service sudo pkill -f jenkins 端口是否占用 sudo lsof -i :80</p>`,75),p=[i];function t(o,r,c,d,u,h){return n(),e("div",null,p)}const y=s(l,[["render",t]]);export{C as __pageData,y as default};
