import{o as e,c as i,d as a}from"./app.92214221.js";const l=a('<h1 id="_2024-04复盘" tabindex="-1">2024.04复盘 <a class="header-anchor" href="#_2024-04复盘" aria-hidden="true">#</a></h1><h2 id="_1-项目亮点" tabindex="-1">1.项目亮点： <a class="header-anchor" href="#_1-项目亮点" aria-hidden="true">#</a></h2><ul><li><p>数据埋点</p><ol><li><a href="#buried1">讲讲你在项目进行的数据埋点，为什么需要埋点？</a></li><li><a href="#buried2">你使用过哪些工具或技术来进行数据埋点？</a></li><li><a href="#buried3">在数据埋点过程中，你遇到过哪些挑战，你是如何解决的？</a></li></ol></li><li><p>Websoket(公告通知，企业员工内部信息交流、政府与企业通信)</p><ol><li><a href="#websocket1">讲讲对websocket的理解，你在项目中如何去使用它？</a></li><li><a href="#websocket2">讲讲你做过的公告通知功能？</a></li><li><a href="#websocket3">讲讲内部信息交流功能？</a></li></ol></li><li><p>上传下载</p><ol><li><a href="#upload">讲讲大文件切片上传?</a></li></ol></li><li><p>Canvas</p><ol><li><a href="#canvas">你使用canvas完成哪些需求？</a></li></ol></li><li><p>地图应用</p><ol><li><a href="#map">你做过哪些地图功能？</a></li></ol></li><li><p>单元测试</p><ol><li><a href="#unit">你做过哪些单元测试、怎么做的？</a></li></ol></li><li><p>项目优化、打包压缩</p><ol><li><a href="#optimize">你做过哪些项目优化？</a></li></ol></li><li><p>复杂表单(开发一个模板，通过配置生成表单)</p><ol><li><a href="#form1">讲讲你的模板配置？</a></li></ol></li><li><p>组件封装(echarts、地图、表单、上传下载、websocket)</p><ol><li><a href="#component">你封装过哪些组件？</a></li></ol></li></ul><h2 id="_2-小程序亮点、移动端" tabindex="-1">2.小程序亮点、移动端 <a class="header-anchor" href="#_2-小程序亮点、移动端" aria-hidden="true">#</a></h2><ul><li>小程序 <ol><li><a href="#mini">你做过哪些小程序项目？</a></li><li><a href="#mini1">小程序的性能优化有哪些？</a></li><li><a href="#mini2">小程序的熟悉程度？</a></li></ol></li><li>移动端 <ol><li><a href="#mobile">如何处理不同设备的屏幕尺寸和分辨率的？</a></li><li><a href="#mobile1">移动端的性能优化有哪些？</a></li><li><a href="#mobile2">移动端的熟悉程度？</a></li></ol></li></ul><h2 id="_3-vue3的熟悉程度" tabindex="-1">3.Vue3的熟悉程度？ <a class="header-anchor" href="#_3-vue3的熟悉程度" aria-hidden="true">#</a></h2><h2 id="面试-针对简历、八股-问题" tabindex="-1">面试(针对简历、八股)问题 <a class="header-anchor" href="#面试-针对简历、八股-问题" aria-hidden="true">#</a></h2><h4 id="你是如何实现rbac权限管理的-从前后端角度讲讲" tabindex="-1">你是如何实现RBAC权限管理的，从前后端角度讲讲？ <a class="header-anchor" href="#你是如何实现rbac权限管理的-从前后端角度讲讲" aria-hidden="true">#</a></h4><p>前端：如何根据角色控制按钮、菜单、请求权限？</p><h4 id="虚拟列表你有什么思路-怎么做" tabindex="-1">虚拟列表你有什么思路，怎么做？ <a class="header-anchor" href="#虚拟列表你有什么思路-怎么做" aria-hidden="true">#</a></h4><details><summary><strong>讲讲你对webpack的理解</strong></summary><p>开发者通过配置来控制项目的打包，从入口文件开始递归的进行打包，两大核心-<strong>compiler/compliation</strong> ,complier初始化会会新建一些钩子，每个模块都会有一个模块对象，用来描述该模块的信息，包括依赖、属于哪个代码块、模块ID(相对于入口文件的相对路径)包括源代码。每个模块都会先建立其模块描述对象，然后根据正则匹配是否需要loader进行转化，转化后通过AST抽象语法树找到其依赖，然后对依赖的模块再进行递归处理，最终根据配置结果生成若干chunk.</p><p>核心机制是loader与plugins,loader本质就是一个函数，参数就是前一个Loader转化出来的代码，return会返回转化后的效果给下一个loader使用，plugins依赖一个库tapble，发布订阅者模式，该库提供多个钩子，通过钩子.tap绑定，最终通过钩子.call来通知触发之前的操作，plugins可以是函数也可以是类，通常是类，并且必须要有一个apply函数，webpack会把compiler实例作为参数提供给apply，我们就可以通过实例找到实例钩子，去订阅我们的插件，在适当的时候我们的插件就会执行。</p></details><h2 id="项目问题" tabindex="-1">项目问题 <a class="header-anchor" href="#项目问题" aria-hidden="true">#</a></h2><h4 id="buried1" tabindex="-1">讲讲你在项目进行的数据埋点，为什么需要埋点？ <a class="header-anchor" href="#buried1" aria-hidden="true">#</a></h4><p>我们的项目是B端，面向企业与政府，所以没有那种监视用户购买行为的埋点，我们主要是错误埋点，目的是及时侦测的错误,在测试或者用户操作的时候就可获取错误的位置，通过我们的监控平台及时定位具体错误。</p><ol><li>点击错误</li><li>请求错误</li><li>Js异常与静态资源错误</li><li>vue错误捕获 核心就是通过<strong>navigator.sendBeacon</strong>去请求，传统的ajax会产生跨域问题,</li></ol><h4 id="buried2" tabindex="-1">你使用过哪些工具或技术来进行数据埋点？ <a class="header-anchor" href="#buried2" aria-hidden="true">#</a></h4><p>由于是内部系统，不允许使用外部埋点sdk，我们是自己搭建的错误监测系统。</p><h4 id="buried3" tabindex="-1">在数据埋点过程中，你遇到过哪些挑战，你是如何解决的？ <a class="header-anchor" href="#buried3" aria-hidden="true">#</a></h4><h4 id="websocket1" tabindex="-1">讲讲对websocket的理解，你在项目中如何去使用它？ <a class="header-anchor" href="#websocket1" aria-hidden="true">#</a></h4><p>websoket本质是基于TCP的一种通信协议，http建立连接时请求升级为websoket,然后开启为全双工通信方式，主要应用于服务端推送数据。</p><h5 id="在项目中的使用" tabindex="-1">在项目中的使用 <a class="header-anchor" href="#在项目中的使用" aria-hidden="true">#</a></h5><p>我们系统有六个用到websoket的地方：</p><ol><li>可视化大屏的数据</li><li>地图上企业的预警信息</li><li>企业公告</li><li>审批通知</li><li>内部人员聊天</li></ol><p>我对于项目中websoket的封装： 我将websoket封装成一个模块。</p><ol><li>初始化websoket,连接成功、失败回调</li><li>自动重连机制（最大重连机制）</li><li>不同消息类型封装处理</li><li>定时心跳让连接保持活跃(避免连接搁置后断开，60秒验证一次)</li><li>当发送信息失败后、会将失败信息进行存储，等待重连后重发(新建一个队列存储发送失败的信息、待连接成功后再次去发送)</li><li>嵌入一些勾子，例如当建立连接后会去执行一些操作(断连重连后需要查询完整的信息) 针对不同的模块做后续的处理</li></ol><h4 id="你如何处理websoket的断线重连" tabindex="-1">你如何处理websoket的断线重连？ <a class="header-anchor" href="#你如何处理websoket的断线重连" aria-hidden="true">#</a></h4><p>断开后会先停止发送心跳验证、然后开始重连，每一次重连比上一次多5秒，最多重连6次，然后将错误信息展示给用户。</p><h4 id="websocket2" tabindex="-1">讲讲你做过的公告通知功能？ <a class="header-anchor" href="#websocket2" aria-hidden="true">#</a></h4><p>登录后会去获取公告历史列表，当有新的公告信息时，会渲染到组件中，当断连重连后会去重新查询公告列表，公告分两个一个是政府对企业下发的通知、一个是企业与政府的审批通知(有新的审批、审批结果通知),用不同信息类型区分、有信息状态是否已读。</p><h4 id="websocket3" tabindex="-1">讲讲内部信息交流功能？ <a class="header-anchor" href="#websocket3" aria-hidden="true">#</a></h4><p>本质上就是一个聊天室，通过websocket实时通信，实现消息的发送与接收。</p><ul><li>消息重发机制</li><li>消息展示</li><li>虚拟列表、类小程序分页 前端界面部分 打开聊天会话框去获取历史记录，发出去的消息会有一个是否发送成功的状态，发送消息后会等待服务端发送消息成功发送的响应,成功响应则显示成功的标志，</li></ul><h4 id="upload" tabindex="-1">讲讲大文件切片上传? <a class="header-anchor" href="#upload" aria-hidden="true">#</a></h4><h4 id="map" tabindex="-1">你做过哪些地图功能？ <a class="header-anchor" href="#map" aria-hidden="true">#</a></h4><ul><li>企业类型图标展示</li><li>风险等级展示,不同企业图标着色</li><li>地图搜索</li><li>地图定位</li><li>地图预警</li></ul><h4 id="optimize" tabindex="-1">你做过哪些项目优化？ <a class="header-anchor" href="#optimize" aria-hidden="true">#</a></h4><p>最基本的就是路由按需加载、webpack魔法注释</p><ol><li>分析包的大小、代码切块、按需加载组件</li></ol><h4 id="optimize1" tabindex="-1">页面的优化指标有哪些，你如何优化？ <a class="header-anchor" href="#optimize1" aria-hidden="true">#</a></h4><ul><li>FP（First Paint）:像素点首次出现在页面上的时间点</li><li>FCP（First Contentful Paint）:首次绘制dom的内容、用户实际看到内容的时间点</li><li>FMP（First Meaningful Paint）：首次有意义绘制</li><li>LCP（Largest Contentful Paint）：最大内容绘制</li><li>TTI（Time to Interactive）：最快可交互时间</li><li>TBT（Total Blocking Time）：总阻塞时间：主线程被阻塞的总时间</li><li>CLS（Cumulative Layout Shift）：累积布局位移 分批加载，先加载核心内容</li></ul><h4 id="form1" tabindex="-1">讲讲你的模板配置？ <a class="header-anchor" href="#form1" aria-hidden="true">#</a></h4><p>我的初衷是为了快速开发表单模块，之前做过一版json配置的表单，但是发现面对差异化开发还是比较困难，所以换成代码生成的方式。 最终的效果类似低代码，核心就是将element的配置全部写入代码中，用户点击生成对应的json配置，最终生成根据json生成对应的代码。 这其中混入了许多配置项</p><h4 id="component" tabindex="-1">你封装过哪些组件？ <a class="header-anchor" href="#component" aria-hidden="true">#</a></h4><ol><li>通用的json表单，传入配置对象即可生成包含搜索栏、表格、添加表单的通用组件： 表单:常见下拉框、时间选择框、级联框、文件上传等 表格：封装了分页、数据过滤、原生属性，可点击功能、文件、图片预览、</li></ol><h4 id="webpack" tabindex="-1">讲讲你对webpack的理解 <a class="header-anchor" href="#webpack" aria-hidden="true">#</a></h4>',45),r=[l],s=JSON.parse('{"title":"2024.04复盘","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.项目亮点：","slug":"_1-项目亮点","link":"#_1-项目亮点","children":[]},{"level":2,"title":"2.小程序亮点、移动端","slug":"_2-小程序亮点、移动端","link":"#_2-小程序亮点、移动端","children":[]},{"level":2,"title":"3.Vue3的熟悉程度？","slug":"_3-vue3的熟悉程度","link":"#_3-vue3的熟悉程度","children":[]},{"level":2,"title":"面试(针对简历、八股)问题","slug":"面试-针对简历、八股-问题","link":"#面试-针对简历、八股-问题","children":[]},{"level":2,"title":"项目问题","slug":"项目问题","link":"#项目问题","children":[]}],"relativePath":"note/frontend/interview/index.md","lastUpdated":1716126473000}'),h={name:"note/frontend/interview/index.md"},c=Object.assign(h,{setup(t){return(d,n)=>(e(),i("div",null,r))}});export{s as __pageData,c as default};
