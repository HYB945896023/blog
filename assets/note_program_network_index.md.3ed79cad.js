import{_ as i,o as t,c as l,d as a}from"./app.92214221.js";const u=JSON.parse('{"title":"网络知识","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 请求类型大全","slug":"_1-请求类型大全","link":"#_1-请求类型大全","children":[]},{"level":2,"title":"OSI 网络协议","slug":"osi-网络协议","link":"#osi-网络协议","children":[]}],"relativePath":"note/program/network/index.md","lastUpdated":1689069539000}'),e={name:"note/program/network/index.md"},d=a('<h1 id="网络知识" tabindex="-1">网络知识 <a class="header-anchor" href="#网络知识" aria-hidden="true">#</a></h1><h2 id="_1-请求类型大全" tabindex="-1">1. 请求类型大全 <a class="header-anchor" href="#_1-请求类型大全" aria-hidden="true">#</a></h2><blockquote><p>  该属性作用就是告诉客户端、服务端双端 所传输的媒体数据 是什么类型的，以便于双方使用对应的解码类型去解析数据。 也被称为 MIME 类型</p></blockquote><ol><li>普通媒体模式：</li></ol><table><thead><tr><th>字段</th><th>格式</th></tr></thead><tbody><tr><td>text/html</td><td>HTML 格式</td></tr><tr><td>text/xml</td><td>XML 格式</td></tr><tr><td>image/gif</td><td>gif 图片格式</td></tr><tr><td>image/jpeg</td><td>jpg 图片格式</td></tr><tr><td>image/png</td><td>png 图片格式</td></tr></tbody></table><ol start="2"><li>application 媒体类型 <ol><li>application/x-www-form-urlencoded： 浏览器的原生 form 表单，传输以 key1=val1&amp;key2=val2 的形势进行传输</li><li>application/pdf</li><li>application/xml</li><li>application/json</li><li>application/msword : word 文档的格式</li><li>application/octet-stream： 二进制流文件，常见的文件下载</li><li>application/atom+xml： Atom XML 聚合格式</li><li>application/xhtml+xml ： XHTML 格式</li></ol></li><li>Multipart/form-data: 媒体上次文件类型 Form 标签上的 enctype=&quot;multipart/form-data&quot; 使用 boundary 进行单元分隔.</li></ol><h1 id="计算机网络知识" tabindex="-1">计算机网络知识： <a class="header-anchor" href="#计算机网络知识" aria-hidden="true">#</a></h1><ul><li>带宽: 一秒内能达到的最大速度，也就是速度的理论极值</li><li>吞吐量: 单位时间内通过某接口，信道的数据量</li></ul><p>数据传输使用电气特性来传输，10-15 表示二进制 0，-10- -15 表示 1</p><ul><li><p>光纤:使用光脉冲来传输，与电平信号进行互相转换。</p></li><li><p>传输会有损耗，所以我们需要每隔一段距离来还原增强信号，这个东西就是中继器</p></li><li><p>以太网:局域网技术 无连接:发送方与接收方不会建立连接。 不可靠:接收方无法向发送方确实 数据经过网卡变成传输帧</p></li><li><p>无线局域网: 利用 AP 通信基站来通信，实行半双工通信模式</p></li><li><p>网段:ip 地址+子网掩码</p></li><li><p>我们通过路由 NAT 转换与外界网络进行通信，一般一个 c 类地址会划分为多个子网，外部网络请求通过子网掩码来寻找目标子网。 ARP 协议，就是用来寻找目标 mac 地址进行通信，每个主机都有一个 ARP 列表，每次发送请求前先检查自身的 ARP 列表是否有目标源 ip 与 mac 地址，没有就发送 ARP 请求寻找目的主机，网络中每个收到 ARP 请求会先去查看自身 ip 等信息是否符合，符合将信息插入自身 ARP 列表（包含了源主机的信息，然后返回响应。</p></li><li><p>ICMP 协议，用来校验是否有丢包以及正常传输，ping 就是基于该协议。</p></li><li><p>端口用来监听一个应用程序，网络请求需要确定发送给哪个应用程序，所以一个端口只能有一个应用程序。</p></li><li><p>udp 没有三握四挥，减少了开销，以及数据不会分片（数据链路层的每一帧是有大小限制的），没有拥塞控制，无论网络情况照常发送自己的数据</p></li></ul><h2 id="osi-网络协议" tabindex="-1">OSI 网络协议 <a class="header-anchor" href="#osi-网络协议" aria-hidden="true">#</a></h2><p>网络通信参考模型： 从上到下是：</p><ul><li>物理层</li><li>数据链路层</li><li>网络层</li><li>传输层</li><li>会话层</li><li>表示层</li><li>应用层</li></ul>',13),o=[d];function r(p,n,c,s,h,m){return t(),l("div",null,o)}const f=i(e,[["render",r]]);export{u as __pageData,f as default};
